#ip 4             // instruction pointer designed to register[4]
seti 123 0 1      // register[1] = 123
bani 1 456 1      // register[1] = register[1] & 456
eqri 1 72 1       // register[1] = if register[1] == 72 { 1 } else { 0 }
addr 1 4 4        // register[4] = register[1] + register[4]
seti 0 0 4        // register[4] = 0
seti 0 7 1        // register[1] = 0
bori 1 65536 5    // register[5] = register[1] | 65536
seti 8595037 6 1  // register[1] = 8595037
bani 5 255 3      // register[3] = register[5] & 255
addr 1 3 1        // register[1] = register[1] + register[3]
bani 1 16777215 1 // register[1] = register[1] & 16777215
muli 1 65899 1    // register[1] = register[1] * 65899
bani 1 16777215 1 // register[1] = register[1] & 16777215
gtir 256 5 3      // register[3] = if 256 > register[5] { 1 } else { 0 }
addr 3 4 4        // register[4] = register[3] + register[4]
addi 4 1 4        // register[4] = register[4] + 1
seti 27 4 4       // register[4] = 27
seti 0 2 3        // register[3] = 0
addi 3 1 2        // register[2] = register[3] + 1
muli 2 256 2      // register[2] = register[2] * 256
gtrr 2 5 2        // register[2] = if register[2] > register[5] { 1 } else { 0 }
addr 2 4 4        // register[4] = register[2] + register[4]
addi 4 1 4        // register[4] = register[4] + 1
seti 25 4 4       // register[4] = 25
addi 3 1 3        // register[3] = register[3] + 1
seti 17 8 4       // register[4] = 17
setr 3 8 5        // register[5] = register[3]
seti 7 5 4        // register[4] = 7
eqrr 1 0 3        // register[3] = if register[1] == register[0] { 1 } else { 0 }
addr 3 4 4        // register[4] = register[3] + register[4]
seti 5 9 4        // register[4] = 5
